---
# Source: co-web/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: co-co-web
  labels:
    helm.sh/chart: co-web-0.0.1
    app.kubernetes.io/name: co-web
    app.kubernetes.io/instance: co
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: co-web/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: co-web
    app.kubernetes.io/version: 0.0.1
    helm.sh/chart: co-web-0.0.1
  name: co-co-web
spec:
  ports:
  - name: co-web
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app.kubernetes.io/instance: co
    app.kubernetes.io/name: co-web
  type: ClusterIP
---
# Source: co-web/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: co-web
    app.kubernetes.io/version: 0.0.1
    helm.sh/chart: co-web-0.0.1
  name: co-co-web
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: co
      app.kubernetes.io/name: co-web
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: co
        app.kubernetes.io/name: co-web
    spec:
      containers:
      - env:
        - name: K8S_SERVICE_PORT
          value: "3000"
        - name: K8S_APP_NAME
          value: co-web
        - name: K8S_RELEASE_NAME
          value: co
        - name: K8S_RELEASE_NAMESPACE
          value: production
        - name: DEBUG
          value: "true"
        image: curioushuman/curious-outcomes-web:0.0.1
        imagePullPolicy: IfNotPresent
        name: co-web
        ports:
        - containerPort: 3000
          name: co-web
          protocol: TCP
        resources: {}
        securityContext: {}
      securityContext: {}
      serviceAccountName: co-co-web
---
# Source: co-web/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
  labels:
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: co-web
    app.kubernetes.io/version: 0.0.1
    helm.sh/chart: co-web-0.0.1
  name: co-co-web
spec:
  ingressClassName: nginx
  rules:
  - host: curious-outcomes-web.dev
    http:
      paths:
      - backend:
          service:
            name: co-co-web
            port:
              number: 3000
        path: /?(.*)
        pathType: Prefix
