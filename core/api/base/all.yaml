---
# Source: co-api/charts/mongodb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: co-mongodb
  namespace: production
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-11.1.10
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: co-mongodb
---
# Source: co-api/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: co-co-api
  labels:
    helm.sh/chart: co-api-0.0.1
    app.kubernetes.io/name: co-api
    app.kubernetes.io/instance: co
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: co-api/charts/mongodb/templates/standalone/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: co-mongodb
  namespace: production
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-11.1.10
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: co-api/charts/mongodb/templates/standalone/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: co-mongodb
  namespace: production
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-11.1.10
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  type: ClusterIP
  ports:
    - name: mongodb
      port: 27017
      targetPort: mongodb
      nodePort: null
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: co
    app.kubernetes.io/component: mongodb
---
# Source: co-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: co-api
    app.kubernetes.io/version: 0.0.1
    helm.sh/chart: co-api-0.0.1
  name: co-co-api
spec:
  ports:
  - name: co-api
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app.kubernetes.io/instance: co
    app.kubernetes.io/name: co-api
  type: ClusterIP
---
# Source: co-api/charts/mongodb/templates/standalone/dep-sts.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: co-mongodb
  namespace: production
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-11.1.10
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: co
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        helm.sh/chart: mongodb-11.1.10
        app.kubernetes.io/instance: co
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: mongodb
    spec:
      
      serviceAccountName: co-mongodb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        sysctls: []
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb:4.4.13-debian-10-r52
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MONGODB_EXTRA_USERNAMES
              value: "co-api"
            - name: MONGODB_EXTRA_DATABASES
              value: "co-api"
            - name: MONGODB_EXTRA_PASSWORDS
              valueFrom:
                secretKeyRef:
                  name: co-api-mongodb
                  key: mongodb-passwords
            - name: MONGODB_ROOT_USER
              value: "root"
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: co-api-mongodb
                  key: mongodb-root-password
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_DISABLE_JAVASCRIPT
              value: "no"
            - name: MONGODB_ENABLE_JOURNAL
              value: "yes"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  # Run the proper check depending on the version
                  [[ $(mongo --version | grep "MongoDB shell") =~ ([0-9]+\.[0-9]+\.[0-9]+) ]] && VERSION=${BASH_REMATCH[1]}
                  . /opt/bitnami/scripts/libversion.sh
                  VERSION_MAJOR="$(get_sematic_version "$VERSION" 1)"
                  VERSION_MINOR="$(get_sematic_version "$VERSION" 2)"
                  VERSION_PATCH="$(get_sematic_version "$VERSION" 3)"
                  if [[ "$VERSION_MAJOR" -ge 4 ]] && [[ "$VERSION_MINOR" -ge 4 ]] && [[ "$VERSION_PATCH" -ge 2 ]]; then
                      mongo --disableImplicitSessions $TLS_OPTIONS --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep -q 'true'
                  else
                      mongo --disableImplicitSessions $TLS_OPTIONS --eval 'db.isMaster().ismaster || db.isMaster().secondary' | grep -q 'true'
                  fi
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath: 
      volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: co-mongodb
---
# Source: co-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: co-api
    app.kubernetes.io/version: 0.0.1
    helm.sh/chart: co-api-0.0.1
  name: co-co-api
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: co
      app.kubernetes.io/name: co-api
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: co
        app.kubernetes.io/name: co-api
    spec:
      containers:
      - env:
        - name: K8S_SERVICE_PORT
          value: "3000"
        - name: K8S_APP_NAME
          value: co-api
        - name: K8S_RELEASE_NAME
          value: co
        - name: K8S_RELEASE_NAMESPACE
          value: production
        - name: DEBUG
          value: "true"
        - name: MONGODB_PORT
          value: "27017"
        - name: MONGODB_DATABASE
          value: co-api
        - name: MONGODB_USERNAME
          value: co-api
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongodb-passwords
              name: co-api-mongodb
        - name: SALESFORCE_URL_TOKEN
          value: https://test.salesforce.com
        - name: SALESFORCE_URL_DATA
          value: https://asiapacificforum--202206.my.salesforce.com
        - name: SALESFORCE_URL_DATA_VERSION
          value: v55.0
        - name: SALESFORCE_USER
          value: api@asiapacificforum.net.202206
        - name: SALESFORCE_CONSUMER_KEY
          valueFrom:
            secretKeyRef:
              key: consumer-key
              name: co-api-salesforce
        - name: SALESFORCE_CERTIFICATE_KEY
          valueFrom:
            secretKeyRef:
              key: certificate-key
              name: co-api-salesforce
        image: curioushuman/curious-outcomes-api:0.0.1
        imagePullPolicy: IfNotPresent
        name: co-api
        ports:
        - containerPort: 3000
          name: co-api
          protocol: TCP
        resources: {}
        securityContext: {}
      securityContext: {}
      serviceAccountName: co-co-api
---
# Source: co-api/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
  labels:
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: co-api
    app.kubernetes.io/version: 0.0.1
    helm.sh/chart: co-api-0.0.1
  name: co-co-api
spec:
  ingressClassName: nginx
  rules:
  - host: curious-outcomes-api.dev
    http:
      paths:
      - backend:
          service:
            name: co-co-api
            port:
              number: 3000
        path: /api/?(.*)
        pathType: Prefix
---
# Source: co-api/templates/secrets/co-api-mongodb.yaml
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: co-api-mongodb
  namespace: co-dev
spec:
  encryptedData:
    mongodb-passwords: AgCAEv5cPFdNn0KliZpHQFcz+qQjThSYj208acc9J8GSBoSKIAY8x5swH54ZtvpHSNhpXC3etNtQRqqb8HkKi+TrhAilnAyV0PrOdqi3ubPUfuaKRz6JeprkfvAJ2K/TuJ3gNOMOySX02jCz6kI99B4OmHR9roR3ARfsaNRmf2Sk0beBeDf0DqFv1gdcXHT/m6hNdonNgbYGlkH1q4MZ+0hGvgvGOTty62bufO8prRcTQXtdl8ZxraKm4hlnsWGEuX81NF0K+Sq1vDzrjpUFp8Ub2S6J1ttlAfNOy7+OBoCa8En+vBS6rNPWG5p/rsWWC+uMiHLK6PXS7IBXvqFI92Cwcnyp9OEcRvx3UqpjtvwbdNNsrKj44eAPQbuEc2/KG9O19+Fi1lmllMZpnFk30jP/wgFJ8AcMD/mdraizfpF7WGbsUh36xIRgEKGU2sSEv4sOEe3IEjpcRijQL1lEdBq/vU6/zhZWznYNAx5otCeeWZZuhTJE/0c/y2DFSB6FbNmJMvqBKbNUOwzl3geqxiEbsM50kqdKj5Jt1rNaMFIPvzZHUqNktNMumQOpOCbOghrcPZYRvN6n2nHsihJUxCuQ6gSwG+GrvhMXLQt1qogbu47oyfgr/VB/yRqX/+zvdb61zA8l8bqgKdfv69cwuS6kbOjnavOAjlLkFz60DB5TWdiDIj7U9sPXuTghwpoGQZ/ZJsZI1ErGdKkORbA7sszshw==
    mongodb-replica-set-key: AgCGi8WVBL04/R2RVqm3ZAlkd8McYxw3DT0IFFReWlYIeleKPIpXXUpB86kPB5MmDEKcvVKFYCeOrTxqtmjRfDvAanDrPRoT4McTDvj/KpjsvGXBTdx/JnsTf15iswAdSpBzRojR00F8rgVLAmsaQ5aJs3Kpdp6caq9SDkfc15jJ1GW0lC2NQM0g0O24wRXT1ozwkUPPD1TeKhphXCEvz9Jm+7aqcZcptoH2QMMh75PhUnQ7eFqcFIk55oTvYO7cZEurOZGNjnKdbq/4JnC992JkhqFAKcF116FSffoJM3FRlDoArI8Q10aeeQS3tmQ1KnBiQPeqEdNeyjivDWX1li25rLtuf7AIJMtZYiLOvZdwJZ+MOkLrwPFZl/DA59E64Hnss7UyqUHV5Xs+IJ/l3koQruSTes+0gb8XN029c2PAfaA8IpVDd52Qgv8zWWLRuUaPm8CBBWPLsBQYEkuHKqWCZZzflHCWB7rsmT1sIe5HDLIcG5J6gqs0cAROKch+wFc+N9IqGwXOQPPoxx7FKdVRmexT0GlzqFDzxG4kSxNqVrkA6QQ/xPZeY5ChVzXthDZXCmSHqYHHcD7Gw0iVFi6reLyPCTLXfUh2vbqPilXVEF4k3lfnBkm1oYt1Co4ga9YimhIIIkd4TzzIziGModwJlONC2rshYZIVLGjM9uGH4XhX4DzcTmF0l9PuRJe+l/yfmUTK4facCcp9HvizmzKORKdmBy2eXxMoOolmcMGzxEW+bfkq+aOHBbr5cg==
    mongodb-root-password: AgBHUeorx5w7wQU8kPJaK5J8rTwcpZxvry9fQOmIr6zsXz0eSPOxK2NRyVDdxwDl3+Br0G/Yg7zDup9Lb9Iwt1WjFgl6EEW6mQx8LOXhLOU1p+l3KcMX+a89x0rrbtjV3RObgJNhXFl/oUzDlmqBe9qTqoS5M8e9byWdi4wgrWproaPCFwp7jNxa0R0k8zWFK8owhIicpYmUzFyqZr47ZM4PV/9fHcGIc0Tc1+6pRfl4yJ5kVEvb+aX8eT3tlmsEcfegFN5xt0WYWgAIJPMpnvhcpR4shHoyU8Eu5AzQ3tGOKOcJaWyuqxERc8KHKDDWqAoBJcv0eKexVQRVNvDQV5aBtP8Bk2AZLxvUX+bv0GoGgH34u8lK4m5urbZP0Im1vueENNcS5EheW5WxeIYYFRIWB4DrhJn3ndndcToRq2xRUm0+p8zF5P/nbtMquvepl/+LJMTHgdfiGVUylOsx4zZehn9v68yOfaUWAdRyAgdh81ewtgqn7pyKN30KVyNupgLc9gHqH6/fIxI04Y4N/AKxHtnZKcVv5YCjvinPMNA51pvFjpOIz3pva9D67Psi8OPJBY6HM6sr/9gDuOLNYKs0b4jM8bPdWSX3qo6nRMXVZMU/BvKyWip8IxfUUUKPKXjwrOQnHv8eG/F9jV8ttUhcCNqfdOUxj7TCsQUMU9DNKkckFzzVEv2w6lFKNRbxo2wmDQkMBCKCq4LkA39Om8lc
  template:
    data: null
    metadata:
      creationTimestamp: null
      name: co-api-mongodb
      namespace: co-dev
---
# Source: co-api/templates/secrets/co-api-salesforce.yaml
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: co-api-salesforce
  namespace: co-dev
spec:
  encryptedData:
    certificate-key: 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
    consumer-key: AgBC8jhimmwMYwRS9aWx0TpVteUtLhDJA+96Qm5CNN/ETON6KO99HPlZzoIosY1TbefFHBpBCzmiWYGfJCvb1IAkGVA+tXdBOtFvYqncctJUF6mYVEaso5PhosPre4AaoB+9bOFMX9aFU5+n1gi2mZ0j+oTrBjyyH0j1aGli31h4SfWN8ERWhPg8C8Y/5z5WnTUGpKIBp/LgDQvkievKucYNRWOaw6n88lV5FaP3FSE4HFqHsgOilIzXF+M4lZsX3j4rvGlA47EsgttVqfDtK0ZLHgturF23FantDk1R9oQJmF30H8gM8WOm4RvEcD9MyQ6uITgPRMxz7ek72+zEE+P00zSnbZC5KW4wRrkw01WO5i0SRD5nXwuc7skIdhPMPuX1OonCl9bEcOwwfXHT0jo2A0/52UoNWAYt6icgvmKXENqK/wfH4aB6vbTQBkLCPlqu5S1R9k2KyjKeMjqqj1rnUFzMLq09+kTwZHrhclrcGRJGenUHvOzhBxMBoeQCDRNkM/FiFTZSDcjCOVv/BAqrSC5EEXT1bxb+07s0q/2F6qaMkIvrsv/V+vWqMxBEMh23ZgLBIol32ZP42mO/VlqZjUeoPwHwW4HnEf5TdNQTmys19h59sRBkBMTXwZoprz5dJfh472mJeZPcZYpCqmdp5Y43pKgo/fPEOf1vZPr+hJYbyGO7gTOtJ6dt5Kyb8Ab0k1HF8EzM1WuEvApFXoQuvW/9rILAz7pBPHfEeaqR4zF76b3AS6UXO+/isNvjoius+B7s4BOLgS46LkE+tpzqb1VZDqNYz8t4usx0u7HEwmPp999E
  template:
    data: null
    metadata:
      creationTimestamp: null
      name: co-api-salesforce
      namespace: co-dev
