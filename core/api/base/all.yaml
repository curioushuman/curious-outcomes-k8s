---
# Source: co-api/charts/mongodb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: co-mongodb
  namespace: production
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-11.1.10
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: co-mongodb
---
# Source: co-api/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: co-co-api
  labels:
    helm.sh/chart: co-api-0.0.1
    app.kubernetes.io/name: co-api
    app.kubernetes.io/instance: co
    app.kubernetes.io/version: "0.0.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: co-api/charts/mongodb/templates/standalone/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: co-mongodb
  namespace: production
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-11.1.10
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: co-api/charts/mongodb/templates/standalone/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: co-mongodb
  namespace: production
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-11.1.10
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  type: ClusterIP
  ports:
    - name: mongodb
      port: 27017
      targetPort: mongodb
      nodePort: null
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: co
    app.kubernetes.io/component: mongodb
---
# Source: co-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: co-api
    app.kubernetes.io/version: 0.0.2
    helm.sh/chart: co-api-0.0.1
  name: co-co-api
spec:
  ports:
  - name: co-api
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app.kubernetes.io/instance: co
    app.kubernetes.io/name: co-api
  type: ClusterIP
---
# Source: co-api/charts/mongodb/templates/standalone/dep-sts.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: co-mongodb
  namespace: production
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-11.1.10
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: co
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        helm.sh/chart: mongodb-11.1.10
        app.kubernetes.io/instance: co
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: mongodb
    spec:

      serviceAccountName: co-mongodb
      affinity:
        podAffinity:

        podAntiAffinity:

        nodeAffinity:

      securityContext:
        fsGroup: 1001
        sysctls: []
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb:4.4.13-debian-10-r52
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MONGODB_EXTRA_USERNAMES
              value: "curious-outcomes-api"
            - name: MONGODB_EXTRA_DATABASES
              value: "curious-outcomes-api"
            - name: MONGODB_EXTRA_PASSWORDS
              valueFrom:
                secretKeyRef:
                  name: co-api-mongodb
                  key: mongodb-passwords
            - name: MONGODB_ROOT_USER
              value: "root"
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: co-api-mongodb
                  key: mongodb-root-password
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_DISABLE_JAVASCRIPT
              value: "no"
            - name: MONGODB_ENABLE_JOURNAL
              value: "yes"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  # Run the proper check depending on the version
                  [[ $(mongo --version | grep "MongoDB shell") =~ ([0-9]+\.[0-9]+\.[0-9]+) ]] && VERSION=${BASH_REMATCH[1]}
                  . /opt/bitnami/scripts/libversion.sh
                  VERSION_MAJOR="$(get_sematic_version "$VERSION" 1)"
                  VERSION_MINOR="$(get_sematic_version "$VERSION" 2)"
                  VERSION_PATCH="$(get_sematic_version "$VERSION" 3)"
                  if [[ "$VERSION_MAJOR" -ge 4 ]] && [[ "$VERSION_MINOR" -ge 4 ]] && [[ "$VERSION_PATCH" -ge 2 ]]; then
                      mongo --disableImplicitSessions $TLS_OPTIONS --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep -q 'true'
                  else
                      mongo --disableImplicitSessions $TLS_OPTIONS --eval 'db.isMaster().ismaster || db.isMaster().secondary' | grep -q 'true'
                  fi
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath:
      volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: co-mongodb
---
# Source: co-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: co-api
    app.kubernetes.io/version: 0.0.2
    helm.sh/chart: co-api-0.0.1
  name: co-co-api
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: co
      app.kubernetes.io/name: co-api
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: co
        app.kubernetes.io/name: co-api
    spec:
      containers:
      - env:
        - name: K8S_SERVICE_PORT
          value: "3000"
        - name: K8S_APP_NAME
          value: co-api
        - name: K8S_RELEASE_NAME
          value: co
        - name: K8S_RELEASE_NAMESPACE
          value: production
        - name: MONGODB_PORT
          value: "27017"
        - name: MONGODB_DATABASE
          value: curious-outcomes-api
        - name: MONGODB_USERNAME
          value: curious-outcomes-api
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongodb-passwords
              name: co-api-mongodb
        - name: DEBUG
          value: "true"
        image: curioushuman/curious-outcomes-api:0.0.2
        imagePullPolicy: IfNotPresent
        name: co-api
        ports:
        - containerPort: 3000
          name: co-api
          protocol: TCP
        resources: {}
        securityContext: {}
      securityContext: {}
      serviceAccountName: co-co-api
---
# Source: co-api/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
  labels:
    app.kubernetes.io/instance: co
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: co-api
    app.kubernetes.io/version: 0.0.2
    helm.sh/chart: co-api-0.0.1
  name: co-co-api
spec:
  ingressClassName: nginx
  rules:
  - host: curious-outcomes-api.dev
    http:
      paths:
      - backend:
          service:
            name: co-co-api
            port:
              number: 3000
        path: /api/?(.*)
        pathType: Prefix
---
# Source: co-api/templates/secrets/co-api-mongodb.yaml
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: co-api-mongodb
  namespace: co-dev
spec:
  encryptedData:
    mongodb-passwords: AgAjV6avu9ka8wV48+k6G5cEIvNu+tSwW8BA2psDQ9/O8bN0eofGLp6245UC98vLCOh1j4PUjRhQuxGV5rxjsxroang2QLNaVKsSK//H1FvYStJfHoVXJTCocf0tbMT1aAMg9HFoVvdVFlnDgpK+qI0lWovTNOK+6KdZb/VXtlFZEjhBqhgX+pg2baHgkD8RnLJyJEZkohSxc0G/4644chXyZ8og7w2sYKwa8PO+92A5x8QOFLF+hmGdw92OvHYK2aTAumYoxbo9jcIu6HtvDASfCX2qPGrliZasswXJdN+uUN489jH2mxS/5dzDHP2IKhgmDJ/spd1jpbOgYAmVGz9kWnfGs0A9rfgkittBbD3iMjoVzR6BkNd20jeQAd0A9fQZd9LhSPcGCArhehEUoXJG1Ff4E4BC0mh6BhcG1Rg70soh9rhkASZDsigIAfPHGGZurknV/k0d/qr8dzovU4PpWUvUbkvOu3LMp/XJPul+D+xZvzFkD+hlv+YShqw52emSsKFJ5hv9DDOA2+GLHhgYf7dLMxdT5HTy7TgJz9EY064HTF3VoCa4ylipcF+DzjwZ6Urlfrg+XUqWsLc1S/cjHNZsdMgRjxNLqTQqrnP6tvql7aHKWq1xT2QtU3Kfcc9EO6QT87n5K91jrdqHXwUw3/zkdgP/2RFGAU9uX8HjMNmZiSOxTT/2ZdNmb0oUEq/x1XLJIEPfdYDe6xIsM52tNw==
    mongodb-replica-set-key: AgAN5oknSyY6Aoz6rgJGIy9phehGYWMoYDq606rhl77s5gk8tE8JJ6RtXrHVQOZVGfqqyh0EhYB469NiF3TwB3HKHi9X5eBfm0trJM8nRz7ts/FNIg4wgso996RBBO2OY2dyKDQXwomRSVDwU+uXCgsicBbLeStJDfbH6Y8i9AxFtNuN65Ey2vesYi0en22HOH9bTKD7+90wsEL/L+eZ0ma0Jk7Cij9Y59+q+Dq1XSMkJFfW2i0L/DsXrBXz0oP0eE63r5gOAroZ6a8HDs4dt5EjJ4Or0NgIWj150ePLUCMTQhBQodhpLXyLwaZnGa40QDcEmOOkqnSTd5UN4t2D8bKNCjt4q3EqwJP5FBCVARwiHjrQiBO/jjVS8OU927LK+bAAFP6dBUZnPBLIMEzgLW2WfqaXRDJYpfPT0nYcWXiGt/aocN55zKn1BA36gLLT4g5O55OiMOxSpuUK185T9j9NoFBL2tfNNQ33u6xKKJD7P8Os7JmXc+1LFO0So6g5Zk3DAlOAzpt8oRH1VQRKBfwFS5/Q9azmGjKTycmvXT4NDow2VyBqqoEDirh5DfzjVekUkZXTmp7jWf4j9jU60xEuWnwAA24wtM2OxKlLE412Okut1lph7TidtsK/3XoH8DXGXlPbMAu/3Hmr6O1vn049UteAqrqS3cOx8+vjSCe42u2WUv/TodioZgBfXzHFbYmM5sA8klG2Ei6fC/PTbU4cnrhqBs3UBUI1Knnw7EAyesAfferEjhfzDa2GOw==
    mongodb-root-password: AgAoo3MY9GbimfVnXmASkFnzWX95W6ESJuimESU+M0UvMk5axR5LVwoDtHQO0ZOicFLwPFmSjb4iUA6yiIBREh6az0q2p6cKAlMztTTHfl/TJ5sZid9iy9Cqg2FvtARFyS/1HiI43RKK+/wvnB9ZFeIMx4/g2Rx8qyXKgG8yB8RFjyq3p/Hbogi0utpwuSBIGgagStg0880e5AJ+5Rac5cLpQcXtxKh52uBK01dVjIFFo4PYY2fG30WmpfmTaODMrV9N3Jrnhm5UTevxqIscm3dDjuBr2mWfYhn7ltWkceUJprLqQNbhrTjgFf0+axzzIbwnp+YKUDET7nZAEIBSMle3rts0NZj+iMqbXT7XyAMqBPafwcRo3WYQRwgKPqtPoKc2Ltqvy7qP48/MZbpzQkF2DGfFOuNC2nQMP/vLi8DaWb8AEvAA+2OQTOUKkZR9NwczZXpbgkG6i+Fl2fvMn3nMjLBYaCpszk1hSySXIFtizFGlYkI4amloaSUEjvGGQ78U2JGViATZM2AZaNZrBNAMA6r/b6qhksoenlf/f3Z9ua4pyW6ayKGLbLIXJTjiUPrg2eK0B8INF/Wtp1ibXDKXeplfy8T/XKD10aWRvjlnBu2XQZIQ8Jc9wT8DF8zpxrEELcpgednFLPvFzrBJIIDX8mHn7sVCJNcnICMD56WJ6NWHYHibit0yhoH5jNFBKJYJq2py1ZRuZlwp+09OwgyM
  template:
    data: null
    metadata:
      creationTimestamp: null
      name: co-api-mongodb
      namespace: co-dev
